// Code generated by MockGen. DO NOT EDIT.
// Source: intensity-finder.go
//
// Generated by this command:
//
//	mockgen -source=intensity-finder.go -destination=mock/intensity-finder.go
//

// Package mock_carbon is a generated GoMock package.
package mock_carbon

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCarbonItensityFinder is a mock of CarbonItensityFinder interface.
type MockCarbonItensityFinder struct {
	ctrl     *gomock.Controller
	recorder *MockCarbonItensityFinderMockRecorder
	isgomock struct{}
}

// MockCarbonItensityFinderMockRecorder is the mock recorder for MockCarbonItensityFinder.
type MockCarbonItensityFinderMockRecorder struct {
	mock *MockCarbonItensityFinder
}

// NewMockCarbonItensityFinder creates a new mock instance.
func NewMockCarbonItensityFinder(ctrl *gomock.Controller) *MockCarbonItensityFinder {
	mock := &MockCarbonItensityFinder{ctrl: ctrl}
	mock.recorder = &MockCarbonItensityFinderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCarbonItensityFinder) EXPECT() *MockCarbonItensityFinderMockRecorder {
	return m.recorder
}

// GetCurrentCarbonIntensity mocks base method.
func (m *MockCarbonItensityFinder) GetCurrentCarbonIntensity() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCurrentCarbonIntensity")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCurrentCarbonIntensity indicates an expected call of GetCurrentCarbonIntensity.
func (mr *MockCarbonItensityFinderMockRecorder) GetCurrentCarbonIntensity() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCurrentCarbonIntensity", reflect.TypeOf((*MockCarbonItensityFinder)(nil).GetCurrentCarbonIntensity))
}
